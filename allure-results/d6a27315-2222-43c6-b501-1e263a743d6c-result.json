{"name": "Login in account with different user", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=131.0.6778.86)\nStacktrace:\n\tGetHandleVerifier [0x00007FF760656CF5+28821]\n\t(No symbol) [0x00007FF7605C3880]\n\t(No symbol) [0x00007FF76046578A]\n\t(No symbol) [0x00007FF76043F4F5]\n\t(No symbol) [0x00007FF7604E6247]\n\t(No symbol) [0x00007FF7604FECE2]\n\t(No symbol) [0x00007FF7604DF0A3]\n\t(No symbol) [0x00007FF7604AA778]\n\t(No symbol) [0x00007FF7604AB8E1]\n\tGetHandleVerifier [0x00007FF76098FCED+3408013]\n\tGetHandleVerifier [0x00007FF7609A745F+3504127]\n\tGetHandleVerifier [0x00007FF76099B63D+3455453]\n\tGetHandleVerifier [0x00007FF76071BDFB+835995]\n\t(No symbol) [0x00007FF7605CEB9F]\n\t(No symbol) [0x00007FF7605CA854]\n\t(No symbol) [0x00007FF7605CA9ED]\n\t(No symbol) [0x00007FF7605BA1D9]\n\tBaseThreadInitThunk [0x00007FFBB96D259D+29]\n\tRtlUserThreadStart [0x00007FFBBB24AF38+40]", "trace": "self = <test_login_page.TestLoginPage object at 0x000001A6A86289B0>, login = 'invalid user', password = 'invalid password', error_message = 'Invalid username or password!'\nexpected_result = False\n\n    @allure.title(\"Login in account with different user\")\n    @pytest.mark.parametrize('login,password, error_message,expected_result', [\n        (Credentials.LOGIN_USER, Credentials.PASSWORD_USER, None, True),\n        (Credentials.LOGIN_ADMIN, Credentials.PASSWORD_ADMIN, None, True),\n        # негативные тесты\n        (\"invalid user\", Credentials.PASSWORD_USER, \"Invalid username or password!\", False),\n        (Credentials.LOGIN_USER, \"invalid password\", \"Invalid username or password!\", False),\n        (\"invalid user\", \"invalid password\", \"Invalid username or password!\", False)\n    ])\n    def test_login_in_account_with_different_user(self, login, password, error_message, expected_result):\n>       self.login_page().open()\n\ntests\\test_login_page.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nhelpers\\ui_helper.py:32: in open\n    self.wait.until(EC.url_to_be(self._PAGE_URL))\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:96: in until\n    value = method(self._driver)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:125: in _predicate\n    return url == driver.current_url\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:444: in current_url\n    return self.execute(Command.GET_CURRENT_URL)[\"value\"]\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001A6A8A93A10>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...07FF7605BA1D9]\\\\n\\\\tBaseThreadInitThunk [0x00007FFBB96D259D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFBBB24AF38+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=131.0.6778.86)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF760656CF5+28821]\nE       \t(No symbol) [0x00007FF7605C3880]\nE       \t(No symbol) [0x00007FF76046578A]\nE       \t(No symbol) [0x00007FF76043F4F5]\nE       \t(No symbol) [0x00007FF7604E6247]\nE       \t(No symbol) [0x00007FF7604FECE2]\nE       \t(No symbol) [0x00007FF7604DF0A3]\nE       \t(No symbol) [0x00007FF7604AA778]\nE       \t(No symbol) [0x00007FF7604AB8E1]\nE       \tGetHandleVerifier [0x00007FF76098FCED+3408013]\nE       \tGetHandleVerifier [0x00007FF7609A745F+3504127]\nE       \tGetHandleVerifier [0x00007FF76099B63D+3455453]\nE       \tGetHandleVerifier [0x00007FF76071BDFB+835995]\nE       \t(No symbol) [0x00007FF7605CEB9F]\nE       \t(No symbol) [0x00007FF7605CA854]\nE       \t(No symbol) [0x00007FF7605CA9ED]\nE       \t(No symbol) [0x00007FF7605BA1D9]\nE       \tBaseThreadInitThunk [0x00007FFBB96D259D+29]\nE       \tRtlUserThreadStart [0x00007FFBBB24AF38+40]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchWindowException"}, "steps": [{"name": "Open page: https://demo.opensource-socialnetwork.org/login", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=131.0.6778.86)\nStacktrace:\n\tGetHandleVerifier [0x00007FF760656CF5+28821]\n\t(No symbol) [0x00007FF7605C3880]\n\t(No symbol) [0x00007FF76046578A]\n\t(No symbol) [0x00007FF76043F4F5]\n\t(No symbol) [0x00007FF7604E6247]\n\t(No symbol) [0x00007FF7604FECE2]\n\t(No symbol) [0x00007FF7604DF0A3]\n\t(No symbol) [0x00007FF7604AA778]\n\t(No symbol) [0x00007FF7604AB8E1]\n\tGetHandleVerifier [0x00007FF76098FCED+3408013]\n\tGetHandleVerifier [0x00007FF7609A745F+3504127]\n\tGetHandleVerifier [0x00007FF76099B63D+3455453]\n\tGetHandleVerifier [0x00007FF76071BDFB+835995]\n\t(No symbol) [0x00007FF7605CEB9F]\n\t(No symbol) [0x00007FF7605CA854]\n\t(No symbol) [0x00007FF7605CA9ED]\n\t(No symbol) [0x00007FF7605BA1D9]\n\tBaseThreadInitThunk [0x00007FFBB96D259D+29]\n\tRtlUserThreadStart [0x00007FFBBB24AF38+40]\n\n", "trace": "  File \"C:\\Users\\elvyu\\PycharmProjects\\DemoOpenSourseSocialnetwork2\\helpers\\ui_helper.py\", line 32, in open\n    self.wait.until(EC.url_to_be(self._PAGE_URL))\n  File \"C:\\Users\\elvyu\\PycharmProjects\\DemoOpenSourseSocialnetwork2\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 96, in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\elvyu\\PycharmProjects\\DemoOpenSourseSocialnetwork2\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py\", line 125, in _predicate\n    return url == driver.current_url\n                  ^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\elvyu\\PycharmProjects\\DemoOpenSourseSocialnetwork2\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 444, in current_url\n    return self.execute(Command.GET_CURRENT_URL)[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\elvyu\\PycharmProjects\\DemoOpenSourseSocialnetwork2\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\elvyu\\PycharmProjects\\DemoOpenSourseSocialnetwork2\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1733731617539, "stop": 1733731689358}], "parameters": [{"name": "login", "value": "'invalid user'"}, {"name": "password", "value": "'invalid password'"}, {"name": "error_message", "value": "'Invalid username or password!'"}, {"name": "expected_result", "value": "False"}], "start": 1733731617361, "stop": 1733731689359, "uuid": "7ddc8fb4-33f5-4611-b208-e5e99d5fbe13", "historyId": "b845e682d89d50d12b1e61b049a9a5db", "testCaseId": "1c81faf5ead21139d43fdb3e5fdb9ea1", "fullName": "tests.test_login_page.TestLoginPage#test_login_in_account_with_different_user", "labels": [{"name": "epic", "value": "Account"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login_page"}, {"name": "subSuite", "value": "TestLoginPage"}, {"name": "host", "value": "Elena"}, {"name": "thread", "value": "3960-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login_page"}]}